diff --git a/visa/iga/IGALibrary/api/iga.cpp b/visa/iga/IGALibrary/api/iga.cpp
index 9171a87c9..3607316d2 100644
--- a/visa/iga/IGALibrary/api/iga.cpp
+++ b/visa/iga/IGALibrary/api/iga.cpp
@@ -356,7 +356,7 @@ public:
     eopts.autoDepSet =
         (aopts.encoder_opts & IGA_ENCODER_OPT_AUTO_DEPENDENCIES) != 0;
     eopts.sbidCount = aopts.sbid_count;
-    eopts.swsbEncodeMode = aopts.swsb_encode_mode;
+    eopts.swsbEncodeMode = static_cast<iga::SWSB_ENCODE_MODE>(aopts.swsb_encode_mode);
 
     if ((aopts.encoder_opts & IGA_ENCODER_OPT_USE_NATIVE) == 0) {
       if (!iga::ged::IsEncodeSupported(m_model, eopts)) {
diff --git a/visa/iga/IGALibrary/api/iga.h b/visa/iga/IGALibrary/api/iga.h
index 192e046b2..201398c0b 100644
--- a/visa/iga/IGALibrary/api/iga.h
+++ b/visa/iga/IGALibrary/api/iga.h
@@ -12,8 +12,6 @@ SPDX-License-Identifier: MIT
 #ifndef IGA_H
 #define IGA_H
 
-#include "iga_types_swsb.hpp"
-
 #include <stddef.h>
 #include <stdint.h>
 #ifdef _WIN32
@@ -257,7 +255,7 @@ typedef struct {
    * Force the swsb_encode_mode.  If not given (SWSBInvalidMode),
    * then encode mode will be derived from platform.
    */
-  iga::SWSB_ENCODE_MODE swsb_encode_mode;
+  uint32_t /* iga::SWSB_ENCODE_MODE */ swsb_encode_mode;
 } iga_assemble_options_t;
 
 /* detects screwups where someone adds a field and the compiler pads
@@ -320,7 +318,7 @@ static_assert(sizeof(iga_assemble_options_t) == 8 * 4,
         0,                                          /* reserved */             \
         0,                                          /* reserved */             \
         16,                                         /* sbid_count */           \
-        iga::SWSB_ENCODE_MODE::SWSBInvalidMode                                 \
+        0                                           /* iga::SWSB_ENCODE_MODE::SWSBInvalidMode */ \
   }
 
 /*
